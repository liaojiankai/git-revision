!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("child_process"),require("path")):"function"==typeof define&&define.amd?define(["child_process","path"],t):(e=e||self)["git-revision"]=t(e.child_process,e.path)}(this,function(i,o){"use strict";o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o;var n=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var e=function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e};function a(e){return e.replace(/[\s\r\n]+$/,"")}function s(e,t,n){var r=e?["git","--git-dir="+o.join(e,".git"),"--work-tree="+e,t].join(" "):["git",t].join(" ");if(!n)return a(""+i.execSync(r));i.exec(r,function(e,t){if(e)return n(e);n(null,a(t))})}return function(){function t(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};n(this,t),this.gitWorkTree=e.gitWorkTree||void 0,this.commithashCommand=e.commithashCommand||"rev-parse HEAD",this.versionCommand=e.versionCommand||"describe --always",this.branchCommand=e.branchCommand||"rev-parse --abbrev-ref HEAD",this.COMMITHASH=this.commithash(),this.VERSION=this.version(),this.BRANCH=this.branch()}return e(t,[{key:"commithash",value:function(){return s(this.gitWorkTree,this.commithashCommand)}},{key:"version",value:function(){return s(this.gitWorkTree,this.versionCommand)}},{key:"branch",value:function(){return s(this.gitWorkTree,this.branchCommand)||s(this.gitWorkTree,"describe --contains --all HEAD")}}]),t}()});
