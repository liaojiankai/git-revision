!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(e=e||self)["git-revision"]=i()}(this,function(){"use strict";var n=function(e,i){if(!(e instanceof i))throw new TypeError("Cannot call a class as a function")};function r(e,i){for(var n=0;n<i.length;n++){var r=i[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var e=function(e,i,n){return i&&r(e.prototype,i),n&&r(e,n),e},t=require("child_process").exec,o=require("child_process").execSync,a=require("path");function s(e){return e.replace(/[\s\r\n]+$/,"")}function c(e,i,n){var r=e?["git","--git-dir="+a.join(e,".git"),"--work-tree="+e,i].join(" "):["git",i].join(" ");if(!n)return s(""+o(r));t(r,function(e,i){if(e)return n(e);n(null,s(i))})}return function(){function i(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};n(this,i),this.gitWorkTree=e.gitWorkTree||void 0,this.commithashCommand=e.commithashCommand||"rev-parse HEAD",this.versionCommand=e.versionCommand||"describe --always",this.branchCommand=e.branchCommand||"rev-parse --abbrev-ref HEAD",this.COMMITHASH=this.commithash(),this.VERSION=this.version(),this.BRANCH=this.branch()}return e(i,[{key:"commithash",value:function(){return c(this.gitWorkTree,this.commithashCommand)}},{key:"version",value:function(){return c(this.gitWorkTree,this.versionCommand)}},{key:"branch",value:function(){return c(this.gitWorkTree,this.branchCommand)||c(this.gitWorkTree,"describe --contains --all HEAD")}}]),i}()});
